Grid Sizing

(with display: grid; for container)

# Instead of having 
grid-template-rows (recommended)
grid-template-columns (recommended)

you may use:
grid-template: 100px 200px / 400px 800px;

with the equivalent of rows / columns (for short hand)

# you can use "auto" to give responsiveness to the sizes with no specific value
e.g.
grid-template-rows: 100px auto;
grid-template-columns: 200px auto;


# Fractional Sizing (use ratios for sizing)
grid-template-rows: 1fr 2fr; // 1:2
grid-template-columns: 1fr 2fr;  // 1:2


# Minmax Sizing (setting the minimum and maximum size of a grid-item) 
grid-template-columns: 200px minmax(400px, 800px)


# Repeat Sizing (for more multiple repeating sizes)
example of a 2x3 grid:
grid-template-rows: repeat(2, 200px);
grid-template-rows: repeat(3, 100px);


# // grid's size which are not explicitly mentioned will automatically take the size of their contents 


# when we want to create new rows or columns in the future, we can use grid-auto-rows or grid-auto-columns
e.g. 
<div class="grid-container>
    <div class="grid-class">1</div>
    <div class="grid-class">2</div>
    <div class="grid-class">3</div>
    <div class="grid-class">4</div>
</div>

.grid-container {
    display: grid;
    grid-template-rows: repeat(2, 200px)
    grid-template-columns: repeat(1, 300px)
    grid-auto-rows: 300px; // this automatically gets the 3rd and 4th row's size
}